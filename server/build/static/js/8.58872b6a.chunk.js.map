{"version":3,"sources":["components/Reviews/Rating.jsx","api/product.js","views/Product/Reviews.jsx","views/Product/index.jsx"],"names":["Rating","value","text","color","className","defaultProps","url","Data","getAllProducts","axios","get","then","res","data","catch","err","console","log","getProductById","id","Reviews","props","Row","style","marginTop","Col","md","SideCard","styled","Card","ProductView","useParams","useState","loading","setLoading","setData","dispatch","useDispatch","history","useHistory","quantity","init","a","useEffect","handleAddToCart","type","payload","push","to","name","Image","src","image","alt","fluid","ListGroup","variant","Item","rating","reviewCount","price","description","Form","Control","as","Button","onClick"],"mappings":"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","file":"static/js/8.58872b6a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AiFillStar , AiOutlineStar } from 'react-icons/ai'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n         {value >= 1\r\n              ? <AiFillStar />\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : <AiOutlineStar />\r\n          }\r\n      </span>\r\n      <span>\r\n            {value >= 2\r\n            ? <AiFillStar />\r\n            : value >= 1.5\r\n            ? 'fas fa-star-half-alt'\r\n            : <AiOutlineStar />\r\n            }\r\n      </span>\r\n      <span>\r\n     \r\n            {value >= 3\r\n            ? <AiFillStar />\r\n            : value >= 2.5\r\n            ? 'fas fa-star-half-alt'\r\n            : <AiOutlineStar />\r\n        }\r\n      </span>\r\n      <span>\r\n            {value >= 4\r\n              ? <AiFillStar />\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : <AiOutlineStar />\r\n          }\r\n      </span>\r\n      <span>\r\n          {value >= 5\r\n              ? <AiFillStar />\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : <AiOutlineStar />\r\n          }\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nRating.defaultProps = {\r\n  color: '#f8e825',\r\n}\r\n\r\nexport default Rating","import axios from 'axios';\r\nimport Data from '../config/default.json';\r\nlet url = Data.url\r\n\r\nexport const getAllProducts = () => {\r\n    return axios.get(url+'/api/product')\r\n    .then(res => {\r\n        return res.data;\r\n    }).catch(err => {\r\n        console.log('err' , err)\r\n    })\r\n}\r\n\r\nexport const getProductById = (id) => {\r\n    return axios.get(url+'/api/product/'+id)\r\n    .then(res => {\r\n        return res.data;\r\n    }).catch(err => {\r\n        console.log('err' , err)\r\n    })\r\n}","import React from 'react'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\n\nconst Reviews = (props) => {\n    return (\n        <>\n            <Row style={{marginTop: '20px'}}>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              <text>No reviews</text>\n              {/* {product.reviews.length === 0 && <Message>No Reviews</Message>} */}\n              {/* <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup> */}\n            </Col>\n          </Row>\n        </>\n    )\n}\n\nexport default Reviews\n","import React , {useState , useEffect} from 'react'\r\nimport { useParams , useHistory , NavLink } from 'react-router-dom'\r\nimport {getProductById} from '../../api/product';\r\nimport styled from 'styled-components'\r\nimport { BsBag } from 'react-icons/bs'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../../components/Reviews/Rating'\r\nimport Reviews from './Reviews'\r\nimport Loader from '../../components/Loader/loader'\r\n\r\nconst ProductView = (props) => {\r\n\r\n    const { id } = useParams()\r\n    const [loading , setLoading ] = useState(true)\r\n    const [data , setData] = useState('')\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [quantity , setQuantity] = useState(1)\r\n\r\n    const init =  async() => {\r\n        const res = await getProductById(id)\r\n        console.log(\"res\" , res)\r\n        setData(res)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        init()   \r\n    } , [])\r\n\r\n    const handleAddToCart = async() => {\r\n        await dispatch({ type: 'ADD_PRODUCT' , payload: {...data , quantity} })\r\n        history.push('/order')\r\n    }\r\n\r\n    if(loading) {\r\n        return <Loader />\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n         <NavLink className='btn btn-light my-3' to='/'>\r\n            Go Back\r\n        </NavLink>\r\n        <title>{data.name}</title>\r\n        <Row>\r\n            <Col md={6}>\r\n              <Image src={data.image} alt={data.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{data.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={data.rating}\r\n                    text={`${data.reviewCount || 0} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${data.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {data.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <SideCard>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${data.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {'In Stock'}\r\n                        {/* {data.countInStock > 0 ? 'In Stock' : 'Out Of Stock'} */}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            // value={qty}\r\n                            // onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                              {'1'}\r\n                            {/* {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )} */}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                    <Button\r\n                      onClick={handleAddToCart}\r\n                      className='btn-block'\r\n                      type='button'\r\n                    //   disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n                </SideCard>\r\n            </Col>\r\n        </Row>\r\n        <Reviews />\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst SideCard = styled(Card)`\r\n    max-width: 250px;\r\n`;\r\n\r\nexport default ProductView\r\n"],"sourceRoot":""}